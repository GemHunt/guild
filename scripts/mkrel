#!/bin/bash -eu

PKG_NAME=guild

ERTS_VER=8.0
REL_OTP_APPS=(
    compiler
    inets
    kernel
    stdlib
    syntax_tools
)

REL_ROOT=releases
ERLANG_HOME=/usr/local/lib/erlang
GUILD_SRC="$(dirname $0)/.."
GUILD_BUILD="$GUILD_SRC/build/default"

VERSION="${1:-}"

usage-error() {
    echo "usage: $0 VERSION"
    exit 1
}

check-user-args() {
    if [ -z "$VERSION" ]; then
        usage-error
    fi
}

init-args() {
    OS=`package-os`
    ARCH=`package-arch`
    REL_PKG=${PKG_NAME}_${VERSION}_${OS}_${ARCH}
    REL_DIR=$REL_ROOT/$REL_PKG
}

package-os() {
    local os=`uname -o`
    case "$os" in
        GNU/Linux)
            echo "linux"
            ;;
        *)
            echo "Unknown OS: $arch"
            exit 1
            ;;
    esac
}

package-arch() {
    local arch=`uname -i`
    case "$arch" in
        x86_64)
            echo "amd64"
            ;;
        *)
            echo "Unknown architecture: $arch"
            exit 1
            ;;
    esac
}

init-release() {
    mkdir -p $REL_DIR
}

install-erlang() {
    install-erlang-bin
    install-erts
    install-erlang-libs
}

install-erlang-bin() {
    mkdir -p $REL_DIR/bin
    cp $ERLANG_HOME/bin/{start.boot,start_clean.boot} $REL_DIR/bin/
}

install-erts() {
    rsync -a $ERLANG_HOME/erts-$ERTS_VER/ $REL_DIR/erts-$ERTS_VER/
}

install-erlang-libs() {
    local app versioned_app app_src app_dest
    for app in ${REL_OTP_APPS[@]}; do
        versioned_app=$(basename $ERLANG_HOME/lib/$app-*)
        app_src=$ERLANG_HOME/lib/$versioned_app
        app_dest=$REL_DIR/lib/$versioned_app
        mkdir -p $app_dest
        sync-otp-app $app_src/ $app_dest/
    done
}

sync-otp-app() {
    rsync \
        -aL \
        --include ebin --include 'ebin/**' \
        --include priv --include 'priv/**' \
        --exclude '*' \
        "$1" "$2"
}

install-guild() {
    install-guild-bin
    install-guild-libs
}

install-guild-bin() {
    install -D $GUILD_SRC/scripts/guild-rel $REL_DIR/bin/guild
}

install-guild-libs() {
    local app
    for app in `ls $GUILD_BUILD/lib`; do
        sync-otp-app $GUILD_BUILD/lib/$app/ $REL_DIR/lib/$app/
    done
}

init() {
    check-user-args
    init-args
}

create-package() {
    echo "Creating package $REL_PKG"
    init-release
    install-erlang
    install-guild
}

create-archive() {
    echo "Creating archive $REL_PKG.tar.gz"
    tar -C $REL_ROOT -czf $REL_ROOT/$REL_PKG.tar.gz $REL_PKG
}

main() {
    init
    create-package
    create-archive
}

main
