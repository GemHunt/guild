#!/usr/bin/env python

import glob
import json
import os
import sys

RUNDIR = None

timeseries_files = {}

###################################################################
# Init
###################################################################

def init():
    init_rundir()

def init_rundir():
    global RUNDIR
    RUNDIR = os.getenv("RUNDIR")
    if not RUNDIR:
        raise AssertionError("RUNDIR env not set")

###################################################################
# Timeseries
###################################################################

def print_timeseries():
    print_ktsv(latest_timeseries_vals())

def latest_timeseries_vals():
    all = {}
    refresh_timeseries_files()
    for key, file in timeseries_files.items():
        key_vals = all.setdefault(key, [])
        for time, step, val in read_latest_timeseries(file):
            key_vals.append([int(time), int(step), int(val)])
    return all

def refresh_timeseries_files():
    for path in glob.glob(RUNDIR + "/timeseries-*"):
        series_key = series_key_for_timeseries_path(path)
        if series_key not in timeseries_files:
            timeseries_files[series_key] = open(path, "r")

def series_key_for_timeseries_path(path):
    return "test/" + os.path.basename(path)[11:]

def read_latest_timeseries(file):
    while True:
        line = file.readline()
        if not line:
            break
        yield line.split("\t")

###################################################################
# Print
###################################################################

def print_ktsv(vals):
    json.dump({"ktsv": vals}, sys.stdout)
    print_eof()

def print_eof():
    sys.stdout.write("\n\n")
    sys.stdout.flush()

###################################################################
# Main
###################################################################

def main():
    init()
    while sys.stdin.readline():
        print_timeseries()
        print_eof()

def read_uptime():
    return float(open("/proc/uptime", "r").read().split()[0])

main()
